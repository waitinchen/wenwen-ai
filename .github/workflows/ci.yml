name: 高文文持續驗收 CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  data-validation:
    name: 資料驗證
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安裝依賴
        run: npm ci
      
      - name: 執行資料驗證
        run: npm run validate:data
      
      - name: 上傳驗證報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: data-validation-report
          path: data/eval/report/data-validation.json

  api-smoke-test:
    name: API 煙霧測試
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安裝依賴
        run: npm ci
      
      - name: 執行 API 煙霧測試
        run: npm run test:api:smoke
      
      - name: 上傳 API 測試報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: api-smoke-test-report
          path: data/eval/report/api-smoke-test.json

  conversation-eval:
    name: 對話驗收測試
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安裝依賴
        run: npm ci
      
      - name: 執行快速對話驗收
        run: npm run eval:quick
      
      - name: 上傳對話驗收報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: conversation-eval-report
          path: data/eval/report/test-report.json

  build-test:
    name: 構建測試
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安裝依賴
        run: npm ci
      
      - name: 執行 TypeScript 檢查
        run: npm run type-check
      
      - name: 執行 ESLint 檢查
        run: npm run lint
      
      - name: 執行構建
        run: npm run build
      
      - name: 上傳構建產物
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  nightly-regression:
    name: 夜間回歸測試
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      
      - name: 設定 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: 安裝依賴
        run: npm ci
      
      - name: 執行夜間回歸測試
        run: npm run nightly
      
      - name: 上傳夜間回歸報告
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-regression-report
          path: data/eval/report/nightly-*.json
      
      - name: 檢查通過率
        run: |
          PASS_RATE=$(node -e "
          const fs = require('fs');
          try {
            const report = JSON.parse(fs.readFileSync('data/eval/report/test-report.json', 'utf8'));
            console.log(report.pass_rate);
          } catch (e) {
            console.log('0');
          }
          ")
          
          if (( $(echo "$PASS_RATE < 95" | bc -l) )); then
            echo "🚨 警報: 通過率低於 95% ($PASS_RATE%)"
            exit 1
          else
            echo "✅ 夜間回歸測試通過！通過率: $PASS_RATE%"
          fi

  notify-failure:
    name: 失敗通知
    runs-on: ubuntu-latest
    needs: [data-validation, api-smoke-test, conversation-eval, build-test]
    if: failure()
    steps:
      - name: 發送失敗通知
        run: |
          echo "🚨 CI 檢查失敗！"
          echo "請檢查以下工作流程的結果："
          echo "- 資料驗證: ${{ needs.data-validation.result }}"
          echo "- API 煙霧測試: ${{ needs.api-smoke-test.result }}"
          echo "- 對話驗收測試: ${{ needs.conversation-eval.result }}"
          echo "- 構建測試: ${{ needs.build-test.result }}"
